services:
  db:
    container_name: rt_db
    image: postgres:16-alpine
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_DB: rt_saleor
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "rt_saleor"]
      interval: 10s
      timeout: 3s
      retries: 3
    ports:
      - 12432:5432
    volumes:
      - db_data:/var/lib/postgresql/data
      - .data/db/backups:/var/backups

  saleor:
    container_name: rt_saleor
    image: ghcr.io/saleor/saleor:latest
    environment:
      DATABASE_URL: postgres://postgres:postgres@db:5432/rt_saleor
      ALLOWED_HOSTS: localhost, 127.0.0.1, saleor, dashboard, storefront, 8336-37-252-94-15.ngrok-free.app
      ALLOWED_CLIENT_HOSTS: localhost, 127.0.0.1, saleor, dashboard, storefront, 8336-37-252-94-15.ngrok-free.app
      AWS_ACCESS_KEY_ID: 95DtxRiuM1mT23jaaXoTgP
      AWS_SECRET_ACCESS_KEY: VRCcy37w1J9rE7u8ZsG81KxSfnWwZ4FWMfy7w6YkSCf
      AWS_S3_ENDPOINT_URL: https://hb.bizmrg.com
      AWS_MEDIA_CUSTOM_DOMAIN: rt_store.hb.bizmrg.com
      AWS_MEDIA_BUCKET_NAME: rt_store
      AWS_STATIC_CUSTOM_DOMAIN: rt_store_static.hb.bizmrg.com
      AWS_STORAGE_BUCKET_NAME: rt_store_static
      AWS_DEFAULT_ACL: public-read
      SENTRY_DSN: https://8760e7b4e4f3d385f16caf75c17e8140@o4507836575973376.ingest.us.sentry.io/4507836581740544
      PUBLIC_URL: https://8336-37-252-94-15.ngrok-free.app/
      JWT_TTL_ACCESS: 1d
    ports:
      - 12000:8000
    depends_on:
      db:
        condition: service_healthy

  dashboard:
    container_name: rt_dashboard
    image: ghcr.io/saleor/saleor-dashboard:latest
    environment:
      API_URL: http://localhost:12000/graphql/
    ports:
      - 12080:80
    depends_on:
      saleor:
        condition: service_started

  storefront:
    container_name: rt_storefront
    build:
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_SALEOR_API_URL: ${NEXT_PUBLIC_SALEOR_API_URL}
        NEXT_PUBLIC_STOREFRONT_URL: ${NEXT_PUBLIC_STOREFRONT_URL}
        NEXT_SHARP_PATH: ${NEXT_SHARP_PATH}
    restart: always
    ports:
      - 12088:3000
    depends_on:
      saleor:
        condition: service_started

volumes:
  db_data:
